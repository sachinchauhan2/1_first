{"ast":null,"code":"import { createReducer, createSlice } from \"@reduxjs/toolkit\";\nimport { updateStatus } from './action';\nconst initialState = {\n  name: \"Ramesh\",\n  age: 20,\n  status: \"coder\"\n}; //// # this is old method\n// export default (state = initialState, action) => {\n//     if (action.type === 'UPDATE_AGE') {\n//         return {\n//             ...state,\n//             age: action.payload\n//         }\n//     }\n//     return state\n// }\n// export default createReducer(initialState, (builder) => {\n//     builder.addCase('UPDATE_AGE', (state, action) => {\n//         state.age = action.payload\n//     })\n//     builder.addCase('UPDATE_NAME', (state, action) => {\n//         state.name = action.payload\n//     })\n//     builder.addCase(updateStatus, (state, action) => {\n//         state.status = action.payload\n//     })\n// })\n\nconst userReducer = createSlice({\n  name: 'person',\n  // put  any name it will use internaly no use of this name \n  initialState,\n  reducers: {\n    updateName(state, action) {\n      state.name = action.payload;\n    },\n\n    updateage(state, action) {\n      state.age = action.payload;\n    },\n\n    updateStatus(state, action) {\n      state.status = action.payload;\n    }\n\n  }\n});\nexport default userReducer.reducer;","map":{"version":3,"names":["createReducer","createSlice","updateStatus","initialState","name","age","status","userReducer","reducers","updateName","state","action","payload","updateage","reducer"],"sources":["E:/web developnment/1_first/src/userReducer.js"],"sourcesContent":["import { createReducer, createSlice } from \"@reduxjs/toolkit\"\r\nimport { updateStatus } from './action'\r\n\r\n\r\nconst initialState = {\r\n    name: \"Ramesh\",\r\n    age: 20,\r\n    status: \"coder\"\r\n}\r\n\r\n\r\n\r\n//// # this is old method\r\n// export default (state = initialState, action) => {\r\n//     if (action.type === 'UPDATE_AGE') {\r\n//         return {\r\n//             ...state,\r\n//             age: action.payload\r\n//         }\r\n//     }\r\n//     return state\r\n// }\r\n\r\n\r\n// export default createReducer(initialState, (builder) => {\r\n//     builder.addCase('UPDATE_AGE', (state, action) => {\r\n//         state.age = action.payload\r\n//     })\r\n//     builder.addCase('UPDATE_NAME', (state, action) => {\r\n//         state.name = action.payload\r\n//     })\r\n//     builder.addCase(updateStatus, (state, action) => {\r\n//         state.status = action.payload\r\n//     })\r\n// })\r\n\r\n\r\nconst userReducer = createSlice({\r\n    name: 'person', // put  any name it will use internaly no use of this name \r\n    initialState,\r\n    reducers: {\r\n        updateName(state, action) {\r\n            state.name = action.payload\r\n        },\r\n        updateage(state, action) {\r\n            state.age = action.payload\r\n        },\r\n        updateStatus(state, action) {\r\n            state.status = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\nexport default userReducer.reducer"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,SAASC,YAAT,QAA6B,UAA7B;AAGA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,QADW;EAEjBC,GAAG,EAAE,EAFY;EAGjBC,MAAM,EAAE;AAHS,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAGN,WAAW,CAAC;EAC5BG,IAAI,EAAE,QADsB;EACZ;EAChBD,YAF4B;EAG5BK,QAAQ,EAAE;IACNC,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;IACH,CAHK;;IAINC,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACL,GAAN,GAAYM,MAAM,CAACC,OAAnB;IACH,CANK;;IAONV,YAAY,CAACQ,KAAD,EAAQC,MAAR,EAAgB;MACxBD,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACC,OAAtB;IACH;;EATK;AAHkB,CAAD,CAA/B;AAmBA,eAAeL,WAAW,CAACO,OAA3B"},"metadata":{},"sourceType":"module"}